{"version":3,"sources":["theme/theme.js","components/header/Header.js","components/searchBar/searchBar.js","components/job/JobCard.js","components/job/NewJob.js","App.js","index.js"],"names":["createTheme","typography","fontFamily","palette","primary","main","secondary","overrides","MuiDialogActions","root","padding","MuiButton","fontWeight","textTransform","color","outlined","borderRadius","borderColor","MuiSelect","filled","MuiFilledInput","input","height","Header","openNewJob","Box","py","bgcolor","Grid","container","justifyContent","item","xs","display","Typography","variant","Button","onClick","useStyles","makeStyles","wrapper","backgroundColor","boxShadow","flex","margin","SearchBar","classes","p","mt","mb","className","Select","disableUnderline","defaultValue","MenuItem","value","skills","theme","border","cursor","transition","borderLeft","companyName","fontSize","spacing","width","skillChip","JobCard","id","company","jobtype","key","alignItems","map","skill","direction","NewJob","url","handleAddJob","open","useState","title","setTitle","type","setType","setCompany","companyurl","setUrl","desc","setDesc","job","setJob","location","setLocation","Dialog","fullWidth","DialogTitle","IconButton","Close","DialogContent","onSubmit","e","preventDefault","jobData","fetch","method","headers","body","JSON","stringify","then","r","json","data","FilledInput","onChange","target","placeholder","multiline","rows","DialogActions","disableElevation","form","jobs","setJobs","setOpen","useEffect","ThemeProvider","newJob","job_type","ReactDOM","render","App","document","getElementById"],"mappings":"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","file":"static/js/main.20effc76.chunk.js","sourcesContent":["import { createTheme } from \"@material-ui/core\";\n\nconst primary = \"#18E1D9\";\nconst secondary = \"#0B0B15\";\n\nexport default createTheme({\n  typography: {\n    fontFamily: \"Poppins, sans-serif\",\n  },\n  palette: {\n    primary: {\n      main: primary,\n    },\n    secondary: {\n      main: secondary,\n    },\n  },\n  overrides: {\n    MuiDialogActions: {\n      root: {\n        padding: \"8px 24px 16px 24px\",\n      },\n    },\n    MuiButton: {\n      root: {\n        fontWeight: 600,\n        textTransform: \"none\",\n        color: secondary,\n        padding: \"6px 24px\",\n      },\n      outlined: {\n        borderRadius: \"35px\",\n        borderColor: secondary,\n        padding: \"6px 20px\",\n      },\n    },\n    MuiSelect: {\n      filled: {\n        padding: \"15px 0 15px 15px\",\n      },\n    },\n    MuiFilledInput: {\n      input: {\n        height: \"49px\",\n        padding: \"0px 0 0 10px\",\n      },\n    },\n  },\n});\n","import React, { useState} from 'react'\nimport { Box,Grid,Typography, Button } from '@material-ui/core'\n\nexport default function Header({openNewJob}) {\n  return (\n    <Box py={10} bgcolor=\"secondary.main\" color=\"white\">\n      <Grid container justifyContent=\"center\"> \n        <Grid item xs={10}> \n        <Box display=\"flex\" justifyContent=\"space-between\">\n          <Typography variant=\"h5\">Open Job Listing</Typography>\n          <Typography variant=\"h5\">Testimonials</Typography>\n          <Button onClick={openNewJob} variant=\"contained\" color=\"primary\" >\n            Post job\n          </Button>\n          </Box>\n        </Grid>\n      </Grid>\n    </Box>\n  )\n}\n\n","import React from 'react'\nimport { Box, Button, MenuItem,Select, makeStyles } from '@material-ui/core'\n\n const useStyles =  makeStyles(\n  {\n    wrapper: {\n      backgroundColor: \"#fff\",\n      display : \"flex\",\n      boxShadow : \"0px 1px 5px rgba(0, 0, 0, 0.1)\",\n      borderRadius : \"2px\",\n      \"& > *\":{\n        flex:1,\n        height:\"45px\",\n        margin: \"8px\"\n      },\n    }\n  }\n)\nexport default function SearchBar() {\n  const classes = useStyles()\n  return (\n    <Box p={2} mt={-5} mb={2} className={classes.wrapper} >\n        \n        <Select disableUnderline variant=\"filled\" defaultValue =\"Full Time\">\n            <MenuItem value=\"Full Time\"> Full time</MenuItem>\n            <MenuItem value=\"Part Time\"> Part time</MenuItem>\n            <MenuItem value=\"Contract\"> Contract </MenuItem>\n\n        </Select>\n        <Select disableUnderline variant=\"filled\" defaultValue =\"Remote\">\n            <MenuItem value=\"Remote\"> Remote</MenuItem>\n            <MenuItem value=\"In Office\"> In Office</MenuItem>\n\n        </Select>\n        <Button variant=\"contained\" color=\"primary\" >\n            Filter\n          </Button>\n    </Box>\n  )\n}\n","import React from 'react'\nimport { Box,Grid,Typography, Button, makeStyles } from '@material-ui/core'\n\nconst skills = [\"Javascript\", \"React.js\", \"Node.js\"]\n\nconst useStyles = makeStyles((theme)=>(\n    {\n        wrapper: {\n            border:\" 1px solid #e8e8e8\",\n            cursor:\"pointer\", \n            transition: \".3s\",\n\n            borderRadius : \"5px\",\n            \"&:hover\":{\n                boxShadow: \"0px 5px 25px rgba(0, 0, 0, 0.1)\",\n                borderLeft: \"6px solid #4D64E4\",\n            }\n\n    \n          },\n          companyName :{\n            fontSize:\"13.px\",\n            backgroundColor: \"gold\",\n            padding: theme.spacing(0.75),\n            borderRadius : \"5px\",\n            width: \"60px\",\n            fontWeight:600,\n          },\n          skillChip:{\n            margin: theme.spacing(0.5),\n            padding: theme.spacing(0.75),\n            fontSize: \"14.5px\",\n            borderRadius: \"5px\",\n            // transition: \".3s\",\n            fontWeight:600,\n            backgroundColor: \"cyan\"\n            // theme.palette.secondary.main,\n            // color: \"fff\"\n          },\n    }))\n\nexport default function JobCard({id, company, jobtype}) {\n    // console.log(jobs)\n    const classes= useStyles();\n  return (\n    <Box p={2} className={classes.wrapper} key={id}>\n       { <Grid container alignItems='center'>\n            <Grid item xs>\n                <Typography variant =\"subtitle1\">{jobtype}</Typography>\n                <Typography className={classes.companyName} variant =\"subtitle2\">{company}</Typography>\n\n            </Grid>\n            <Grid item container xs>\n                {skills.map((skill)=> \n                (<Grid className={classes.skillChip} key={skill} item>{skill}</Grid>)\n                )}\n            </Grid>\n            <Grid item container direction='column' color=\"white\" alignItems='flex-end' xs>\n                <Grid item>\n                <Typography variant =\"caption\">\n                    2577 min ago | Fulltime | Remote\n                </Typography>\n\n                </Grid>\n                <Grid item>\n                    <Box mt={2}>\n                    <Button variant= \"outlined\">\n                        Check\n                    </Button>\n                    </Box>\n                </Grid>\n\n            </Grid>\n\n        </Grid>}\n    </Box>\n  )\n}\n","import React, { useState } from \"react\";\nimport {\n  Box,\n  Grid,\n  IconButton,\n  FilledInput,\n  makeStyles,\n  Button,\n  Select,\n  MenuItem,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Typography,\n} from \"@material-ui/core\";\nimport { Close as CloseIcon } from \"@material-ui/icons\";\nconst useStyles = makeStyles((theme) => ({\n  skillChip: {\n    margin: theme.spacing(0.5),\n    padding: theme.spacing(0.75),\n    fontSize: \"14.5px\",\n    borderRadius: \"5px\",\n    // transition: \".3s\",\n    fontWeight: 600,\n    // backgroundColor: \"lightblue\",\n    border: `1px solid ${theme.palette.secondary.main}`,\n    color: theme.palette.secondary.main,\n    cursor: \"pointer\",\n    \"&:hover\": {\n      backgroundColor: theme.palette.secondary.main,\n      color: \"#fff\",\n    },\n  },\n}));\n\nconst skills = [\n  \"Javascript\",\n  \"React\",\n  \"vue\",\n  \"firebase\",\n  \"Node\",\n  \"MongoDb\",\n  \"Express\",\n];\nexport default function NewJob({ url, handleAddJob,open }) {\n  const classes = useStyles();\n  const [title, setTitle] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const [company, setCompany] = useState(\"\");\n  const [companyurl, setUrl] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n  const [job, setJob] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    const jobData = {\n      title,\n      type,\n      company,\n      companyurl,\n      desc,\n      job,\n      location,\n    };\n\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(jobData),\n    })\n      .then((r) => r.json())\n      .then((data) => {\n        handleAddJob(data);\n\n        setTitle(\"\")\n        setType(\"\")\n        setCompany(\"\")\n        setUrl(\"\")\n        setDesc(\"\")\n        setJob(\"\")\n        setLocation(\"\")\n      });\n  }\n\n  return (\n    <Dialog open={open} fullWidth>\n      <DialogTitle>\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n          Post Job\n          <IconButton>\n            <CloseIcon />\n          </IconButton>\n        </Box>\n      </DialogTitle>\n      <DialogContent>\n        <form onSubmit={handleSubmit} id=\"myform\">\n          <Grid container spacing={2}>\n            <Grid item xs={6}>\n              <FilledInput\n                value={title}\n                onChange={(e) => setTitle(e.target.value)}\n                placeholder=\" Job title *\"\n                disableUnderline\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <Select\n                onChange={(e) => setType(e.target.value)}\n                value={type}\n                fullWidth\n                disableUnderline\n                variant=\"filled\"\n                defaultValue=\"Full Time\"\n              >\n                <MenuItem value=\"Full Time\"> Full time</MenuItem>\n                <MenuItem value=\"Part Time\"> Part time</MenuItem>\n                <MenuItem value=\"Contract\"> Contract </MenuItem>\n              </Select>\n            </Grid>\n            <Grid item xs={6}>\n              <FilledInput\n                onChange={(e) => setCompany(e.target.value)}\n                value={company}\n                placeholder=\" Company Name *\"\n                disableUnderline\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <FilledInput\n                onChange={(e) => setUrl(e.target.value)}\n                value={companyurl}\n                placeholder=\" Company URL *\"\n                disableUnderline\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <Select\n                onChange={(e) => setLocation(e.target.value)}\n                value={location}\n                disableUnderline\n                fullWidth\n                variant=\"filled\"\n                defaultValue=\"Remote\"\n              >\n                <MenuItem value=\"Remote\"> Remote</MenuItem>\n                <MenuItem value=\"In Office\"> In Office</MenuItem>\n              </Select>\n            </Grid>\n            <Grid item xs={6}>\n              <FilledInput\n                onChange={(e) => setJob(e.target.value)}\n                value={job}\n                placeholder=\" Job link *\"\n                disableUnderline\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FilledInput\n                value={desc}\n                onChange={(e) => setDesc(e.target.value)}\n                placeholder=\" Job description *\"\n                fullWidth\n                multiline\n                rows={3}\n                disableUnderline\n              />\n            </Grid>\n          </Grid>\n          <Box display=\"flex\">\n            {skills.map((skill) => (\n              <Box className={classes.skillChip} key={skill}>\n                {skill}\n              </Box>\n            ))}\n          </Box>\n        </form>\n      </DialogContent>\n      <DialogActions>\n        <Box\n          color=\"red\"\n          width=\"100%\"\n          display=\"flex\"\n          justifyContent=\"space-between\"\n        >\n          <Typography variant=\"caption\">*Required fields</Typography>\n          <Button\n            variant=\"contained\"\n            disableElevation\n            color=\"primary\"\n            type=\"submit\"\n            form=\"myform\"\n          >\n            Post Job\n          </Button>\n        </Box>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React,{useState, useEffect} from \"react\";\nimport {  Grid } from \"@material-ui/core\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport theme from \"./theme/theme\"\nimport Header from \"./components/header/Header\";\nimport SearchBar from \"./components/searchBar/searchBar\"\nimport JobCard from \"./components/job/JobCard\";\nimport NewJob from \"./components/job/NewJob\";\n\nexport default () => {\n  const url = \"http://localhost:3000/jobs\";\n  const [jobs, setJobs] = useState([]);\n  const [open, setOpen] = useState(false)\n\n\n\n  // useEffect hook to get all the jobs and set it to state\n  useEffect(() => {\n    fetch(url) \n      .then((r) => r.json())\n      .then((data) => setJobs(data)); \n  }, []);\n  \n  function handleAddJob(newJob) {\n    setJobs([...jobs, newJob]);\n  }\n  return (\n   <ThemeProvider theme={theme}>\n    <Header openNewJob={()=>setOpen(true)}/>\n    <NewJob handleAddJob={handleAddJob} url={url} open={open}/>\n    <Grid container justifyContent=\"center\">\n    <Grid item xs={10}>\n        <SearchBar/>\n        {/* {console.log(jobs)} */}\n        \n       { jobs.map((jobs) => \n       <JobCard id={jobs.id} company={jobs.company} key= {jobs.id} jobtype={jobs.job_type}/>)}\n      </Grid>\n      </Grid>\n     </ThemeProvider>\n\n  )\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n<App />,\n document.getElementById(\"root\"));\n"],"sourceRoot":""}