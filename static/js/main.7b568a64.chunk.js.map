{"version":3,"sources":["theme/theme.js","components/header/Header.js","components/searchBar/searchBar.js","components/job/JobCard.js","components/job/NewJob.js","App.js","index.js"],"names":["createTheme","typography","fontFamily","palette","primary","main","secondary","overrides","MuiDialogActions","root","padding","MuiButton","fontWeight","textTransform","color","outlined","borderRadius","borderColor","MuiSelect","filled","MuiFilledInput","input","height","Header","openNewJob","Box","py","bgcolor","Grid","container","justifyContent","item","xs","display","Typography","variant","Button","onClick","useStyles","makeStyles","wrapper","backgroundColor","boxShadow","flex","margin","SearchBar","searchFunction","classes","p","mt","mb","className","FilledInput","placeholder","onChange","e","target","value","skills","skill","Math","floor","random","length","theme","border","cursor","transition","borderLeft","companyName","fontSize","spacing","width","skillChip","JobCard","id","company","jobtype","handleDelete","time","salary","location","url","image","useState","console","log","key","alignItems","component","sx","maxHeight","md","maxWidth","alt","src","direction","href","fetch","method","then","r","json","NewJob","urll","handleAddJob","open","closeJob","job_type","setTitle","setType","setCompany","setUrl","description","setDesc","setJob","setLocation","skillss","Dialog","fullWidth","DialogTitle","IconButton","Close","DialogContent","onSubmit","preventDefault","jobData","headers","body","JSON","stringify","data","disableUnderline","Select","defaultValue","MenuItem","multiline","rows","DialogActions","disableElevation","type","form","jobs","setJobs","setOpen","viewJob","setViewJob","deleteJob","updatedJob","filter","job","useEffect","ThemeProvider","newJob","searchValue","itemsSearch","toLowerCase","includes","map","requirement","ReactDOM","render","App","document","getElementById"],"mappings":"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","file":"static/js/main.7b568a64.chunk.js","sourcesContent":["import { createTheme } from \"@material-ui/core\";\n\nconst primary = \"#18E1D9\";\nconst secondary = \"#0B0B15\";\n\nexport default createTheme({\n  typography: {\n    fontFamily: \"Poppins, sans-serif\",\n  },\n  palette: {\n    primary: {\n      main: primary,\n    },\n    secondary: {\n      main: secondary,\n    },\n  },\n  overrides: {\n    MuiDialogActions: {\n      root: {\n        padding: \"8px 24px 16px 24px\",\n      },\n    },\n    MuiButton: {\n      root: {\n        fontWeight: 600,\n        textTransform: \"none\",\n        color: secondary,\n        padding: \"6px 24px\",\n      },\n      outlined: {\n        borderRadius: \"35px\",\n        borderColor: secondary,\n        padding: \"6px 20px\",\n      },\n    },\n    MuiSelect: {\n      filled: {\n        padding: \"15px 0 15px 15px\",\n      },\n    },\n    MuiFilledInput: {\n      input: {\n        height: \"49px\",\n        padding: \"0px 0 0 10px\",\n      },\n    },\n  },\n});\n","import React, { useState } from \"react\";\nimport { Box, Grid, Typography, Button } from \"@material-ui/core\";\nimport { NavLink } from \"react-router-dom\";\n\nexport default function Header({ openNewJob }) {\n  return (\n    <Box py={10} bgcolor=\"secondary.main\" color=\"white\">\n      <Grid container justifyContent=\"center\">\n        <Grid item xs={10}>\n          <Box display=\"flex\" justifyContent=\"space-between\">\n            {/* <Typography variant=\"h5\"> */}\n              {/* <NavLink to=\"/\">Home</NavLink> */}\n              {/* Home */}\n            {/* </Typography> */}\n            <Typography variant=\"h5\">\n              {/* <NavLink to=\"/jobs\">Open Job Listing</NavLink> */}\n              Open Job Listing\n            </Typography>\n            <Typography variant=\"h5\">\n              {/* <NavLink to=\"/Testimonials\">Testimonials</NavLink> */}\n              Testimonials\n            </Typography>\n\n            <Button onClick={openNewJob} variant=\"contained\" color=\"primary\">\n            {/* <NavLink to=\"/newjobs\">Post job</NavLink> */}\n             \n            Post job\n            </Button>\n          </Box>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}\n\n","import React from 'react'\nimport { Box,  makeStyles, FilledInput } from '@material-ui/core'\n\n const useStyles =  makeStyles(\n  {\n    wrapper: {\n      backgroundColor: \"#fff\",\n      display : \"flex\",\n      boxShadow : \"0px 1px 5px rgba(0, 0, 0, 0.1)\",\n      borderRadius : \"2px\",\n      \"& > *\":{\n        flex:1,\n        height:\"45px\",\n        margin: \"8px\"\n      },\n    }\n  }\n)\nexport default function SearchBar({searchFunction}) {\n  const classes = useStyles()\n  return (\n    <Box p={2} mt={-5} mb={2} className={classes.wrapper} >\n\n      <FilledInput \n      placeholder='Search for job'\n      onChange={(e)=> searchFunction(e.target.value)}\n      />\n        \n       \n    </Box>\n  )\n}\n","import React, { useState } from \"react\";\nimport { Box, Grid, Typography, Button, makeStyles } from \"@material-ui/core\";\nimport ViewJob from \"./ViewJob\";\n// or\n// import { CardMedia } from '@mui/material/core';\nconst skills = [\"Javascript\", \"React.js\", \"Node.js\"];\nvar skill = skills[Math.floor(Math.random() * skills.length)];\nconst useStyles = makeStyles((theme) => ({\n  wrapper: {\n    border: \" 1px solid #E8E8E8\",\n    cursor: \"pointer\",\n    transition: \".3s\",\n    borderRadius: \"5px\",\n    \"&:hover\": {\n      boxShadow: \"0px 5px 25px rgba(0, 0, 0, 0.1)\",\n      borderLeft: \"6px solid #4D64E4\",\n    },\n  },\n  companyName: {\n    fontSize: \"13.px\",\n    backgroundColor: \"gold\",\n    padding: theme.spacing(0.75),\n    borderRadius: \"5px\",\n    width: \"70px\",\n    fontWeight: 600,\n  },\n  skillChip: {\n    margin: theme.spacing(0.5),\n    padding: theme.spacing(0.75),\n    fontSize: \"14.5px\",\n    borderRadius: \"5px\",\n    // transition: \".3s\",\n    fontWeight: 600,\n    backgroundColor: \"cyan\",\n    // theme.palette.secondary.main,\n    // color: \"fff\"\n  },\n}));\nexport default function JobCard({ id, company, jobtype, time, handleDelete, salary, location, url, image }) {\n  const [check, setCheck] = useState(false);\n  console.log(skill)\n  const classes = useStyles();\n  function handleDeleteClick() {\n    console.log(id);\n    fetch(`https://jbap.herokuapp.com/jobs/${id}`, {\n      method: \"DELETE\",\n    })\n      .then((r) => r.json())\n      .then(() => handleDelete(id));\n  }\n  return (\n    <Box p={2} className={classes.wrapper} key={id}>\n      {\n        <Grid container alignItems=\"center\">\n          <Grid item xs>\n            <Typography variant=\"subtitle1\">{jobtype}</Typography>\n            <Typography className={classes.companyName} variant=\"subtitle2\">\n              {company}\n            </Typography>\n          </Grid>\n          <Grid item container xs>\n            {/* {skills.map((skill) => (\n              <Grid className={classes.skillChip} key={skill} item>\n                {skill}\n              </Grid>\n            ))} */}\n                 <Box\n        component=\"img\"\n        sx={{\n          height: 100,\n          width: 150,\n          maxHeight: { xs: 120, md: 167 },\n          maxWidth: { xs: 150, md: 250 },\n          borderRadius:{md:5},\n        }}\n        alt=\"The company image\"\n        src={image}\n      />\n          </Grid>\n          <Grid\n            item\n            container\n            direction=\"column\"\n            color=\"white\"\n            alignItems=\"flex-end\"\n            xs\n          >\n            <Grid item>\n              <Typography variant=\"caption\"> {salary} | {location}</Typography>\n            </Grid>\n            <Grid item>\n              <Box mt={2}>\n              <Button\n                  variant=\"outlined\"\n                >\n                   <a href={url} target=\"_blank\" >Apply</a>\n                </Button>\n                <Button\n                  variant=\"outlined\"\n                  onClick={handleDeleteClick}\n                >\n                  Delete\n                </Button>\n              </Box>\n            </Grid>\n          </Grid>\n        </Grid>\n      }\n    </Box>\n  );\n}","import React, { useState } from \"react\";\nimport {\n  Box,\n  Grid,\n  IconButton,\n  FilledInput,\n  makeStyles,\n  Button,\n  Select,\n  MenuItem,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Typography,\n} from \"@material-ui/core\";\nimport { Close as CloseIcon } from \"@material-ui/icons\";\nconst useStyles = makeStyles((theme) => ({\n  skillChip: {\n    margin: theme.spacing(0.5),\n    padding: theme.spacing(0.75),\n    fontSize: \"14.5px\",\n    borderRadius: \"5px\",\n    // transition: \".3s\",\n    fontWeight: 600,\n    // backgroundColor: \"lightblue\",\n    border: `1px solid ${theme.palette.secondary.main}`,\n    color: theme.palette.secondary.main,\n    cursor: \"pointer\",\n    \"&:hover\": {\n      backgroundColor: theme.palette.secondary.main,\n      color: \"#fff\",\n    },\n  },\n}));\nconst skills = [\n  \"Javascript\",\n  \"React\",\n  \"vue\",\n  \"firebase\",\n  \"Node\",\n  \"MongoDb\",\n  \"Express\",\n];\nexport default function NewJob({ urll, handleAddJob,open,closeJob}) {\n  const classes = useStyles();\n  const [job_type, setTitle] = useState(\"\");\n  const [salary, setType] = useState(\"\");\n  const [company, setCompany] = useState(\"\");\n  const [url, setUrl] = useState(\"\");\n  const [description, setDesc] = useState(\"\");\n  const [image, setJob] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const [skillss, setSkills] = useState([]);\n  const [old, setOld]=useState()\n  function handleSubmit(e) {\n    e.preventDefault();\n    const jobData = {\n      job_type,\n      salary,\n      company,\n      url,\n      description,\n      image,\n      location,\n      skillss,\n    };\n    fetch(urll, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(jobData),\n    })\n      .then((r) => r.json())\n      .then((data) => {\n        handleAddJob(data);\n        setTitle(\"\")\n        setType(\"\")\n        setCompany(\"\")\n        setUrl(\"\")\n        setDesc(\"\")\n        setJob(\"\")\n        setLocation(\"\")\n      });\n  }\n  return (\n    <Dialog open={open} fullWidth>\n      <DialogTitle>\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n          Post Job\n          <IconButton>\n            <CloseIcon onClick={closeJob}/>\n          </IconButton>\n        </Box>\n      </DialogTitle>\n      <DialogContent>\n        <form onSubmit={handleSubmit} id=\"myform\">\n          <Grid container spacing={2}>\n            <Grid item xs={6}>\n              <FilledInput\n                value={job_type}\n                onChange={(e) => setTitle(e.target.value)}\n                placeholder=\" Job title *\"\n                disableUnderline\n              />\n            </Grid>\n            <Grid item xs={6}>\n              {/* <Select\n                onChange={(e) => setType(e.target.value)}\n                value={type}\n                fullWidth\n                disableUnderline\n                variant=\"filled\"\n                defaultValue=\"Full Time\"\n              >\n                <MenuItem value=\"Full Time\"> Full time</MenuItem>\n                <MenuItem value=\"Part Time\"> Part time</MenuItem>\n                <MenuItem value=\"Contract\"> Contract </MenuItem>\n              </Select> */}\n               <FilledInput\n                onChange={(e) => setType(e.target.value)}\n                value={salary}\n                placeholder=\"  Pay per year $ *\"\n                disableUnderline\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <FilledInput\n                onChange={(e) => setCompany(e.target.value)}\n                value={company}\n                placeholder=\" Company Name *\"\n                disableUnderline\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <FilledInput\n                onChange={(e) => setUrl(e.target.value)}\n                value={url}\n                placeholder=\" Job URL *\"\n                disableUnderline\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <Select\n                onChange={(e) => setLocation(e.target.value)}\n                value={location}\n                disableUnderline\n                fullWidth\n                variant=\"filled\"\n                defaultValue=\"Remote\"\n              >\n                <MenuItem value=\"Remote\"> Remote</MenuItem>\n                <MenuItem value=\"In Office\"> In Office</MenuItem>\n              </Select>\n            </Grid>\n            <Grid item xs={6}>\n              <FilledInput\n                onChange={(e) => setJob(e.target.value)}\n                value={image}\n                placeholder=\" image link *\"\n                disableUnderline\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FilledInput\n                value={description}\n                onChange={(e) => setDesc(e.target.value)}\n                placeholder=\" description *\"\n                fullWidth\n                multiline\n                rows={3}\n                disableUnderline\n              />\n            </Grid>\n          </Grid>\n        </form>\n      </DialogContent>\n      <DialogActions>\n        <Box\n          color=\"red\"\n          width=\"100%\"\n          display=\"flex\"\n          justifyContent=\"space-between\"\n        >\n          <Typography variant=\"caption\">*Required fields</Typography>\n          <Button\n            variant=\"contained\"\n            disableElevation\n            color=\"primary\"\n            type=\"submit\"\n            form=\"myform\"\n          >\n            Post Job\n          </Button>\n        </Box>\n      </DialogActions>\n    </Dialog>\n  );\n}\n// {skills.map((skill) => (\n//   <Box className={classes.skillChip}\n//   key={skill }>\n//     {/* value={skillss}\n//     onChange={(e) => setSkills(e.target.value)} */}\n//     {skill\n//     value={skillss}\n//     onChange={(e) => setSkills(e.target.value)}\n//     }\n//   </Box>\n// ))}\n{/* <Box display=\"flex\">\n</Box> */}","import React, { useState, useEffect } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport theme from \"./theme/theme\";\nimport Header from \"./components/header/Header\";\nimport SearchBar from \"./components/searchBar/searchBar\";\nimport JobCard from \"./components/job/JobCard\";\nimport NewJob from \"./components/job/NewJob\";\n// import Homepage from \"./components/homepage/Homepage\";\n// import ViewJob from \"./components/job/ViewJob\";\nexport default () => {\n  const url = \"https://jbap.herokuapp.com/jobs\";\n  // const url = \"https://jbap.herokuapp.com/jobs\";\n  const [jobs, setJobs] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [viewJob, setViewJob] = useState([]);\n  const [check, setCheck] = useState(false);\n  // useEffect hook to get all the jobs and set it to state\n  useEffect(() => {\n    fetch(url)\n      .then((r) => r.json())\n      .then((data) =>{ setJobs(data)\n      setViewJob(data)\n      });\n  }, []);\n  function searchFunction(searchValue) {\n    const itemsSearch = viewJob.filter((item) => item.job_type.toLowerCase().includes(searchValue.toLowerCase()) ||\n    item.company.toLowerCase().includes(searchValue.toLowerCase())\n    );\n    setJobs(itemsSearch)\n    console.log(jobs)\n}\n  function handleAddJob(newJob) {\n    setJobs([...jobs, newJob]);\n  }\n  function deleteJob(id) {\n    const updatedJob = jobs.filter((job) => job.id !== id);\n    setJobs(updatedJob);\n  }\n  return (\n    <ThemeProvider theme={theme}>\n      <Header openNewJob={() => setOpen(true)} />\n      <NewJob\n        closeJob={() => setOpen(false)}\n        handleAddJob={handleAddJob}\n        urll={url}\n        open={open}\n      />\n        {/* <ViewJob open={check} closeJob={() => setCheck(false)}  /> */}\n      <Grid container justifyContent=\"center\">\n        <Grid item xs={10}>\n          <SearchBar searchFunction={searchFunction} />\n          {jobs.map((jobs) => (\n            <JobCard\n              id={jobs.id}\n              company={jobs.company}\n              key={jobs.id}\n              jobtype={jobs.job_type}\n              skills={jobs.requirement}\n              time={jobs.type}\n              handleDelete={deleteJob}\n              salary = {jobs.salary}\n              location ={jobs.location}\n              url ={jobs.url}\n              image={jobs.image}\n            />\n          ))}\n        </Grid>\n      </Grid>\n    </ThemeProvider>\n  );\n};","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n    \n<App />,\n document.getElementById(\"root\"));\n"],"sourceRoot":""}